from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
import logging

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞
from storage import upload_photo_to_storage
# –≥—Ä—É–ø–ø–æ–≤—ã–µ –±—É—Ñ–µ—Ä—ã –¥–ª—è –º–µ–¥–∏–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è/–Ω–∞–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ media_processing
from handlers.shared_data import media_groups, media_group_locks, document_groups, document_group_locks


async def show_media_buttons(chat_id: int, state: FSMContext, bot):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–¥–∏–∞ –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ —Ñ–æ—Ç–æ.
    –ö–Ω–æ–ø–∫–∏:
      - ¬´–ì–æ—Ç–æ–≤–æ¬ª -> media_done
      - ¬´–î–æ–±–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ¬ª -> add_video
    """
    try:
        data = await state.get_data()
        media_list = data.get("media", [])
        limit = data.get("media_limit", 6)
        count = len(media_list)

        builder = InlineKeyboardBuilder()
        builder.add(types.InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data="media_done"))
        builder.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ", callback_data="add_video"))
        builder.adjust(2)

        await bot.send_message(
            chat_id,
            f"üì∑ –§–æ—Ç–æ: {count}/{limit}\n"
            "‚Ä¢ –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–∫ —Ñ–æ—Ç–æ –∏–ª–∏ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç (–∫–∞—á–µ—Å—Ç–≤–æ –ª—É—á—à–µ)\n"
            "‚Ä¢ –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ ‚Äî –Ω–∞–∂–º–∏—Ç–µ ¬´–ì–æ—Ç–æ–≤–æ¬ª",
            reply_markup=builder.as_markup()
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ show_media_buttons: {e}", exc_info=True)


async def handle_media_upload(bot, media_list, bouquet_id: str):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ —Ñ–æ—Ç–æ –≤ –æ–±–ª–∞–∫–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –°–ü–ò–°–û–ö –°–õ–û–í–ê–†–ï–ô –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î.

    üëâ –§–æ—Ä–º–∞—Ç —ç–ª–µ–º–µ–Ω—Ç–∞:
        {
          "file_id": "<telegram_file_id>",             # –í–°–ï–ì–î–ê
          "url": "https://<yandex-object-storage>..."  # –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ —É–¥–∞–ª–∞—Å—å
        }

    –ï—Å–ª–∏ –æ–±–ª–∞–∫–æ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ ‚Äî –≤—Å—ë —Ä–∞–≤–Ω–æ –≤–µ—Ä–Ω—ë–º {"file_id": "..."}.
    """
    uploaded = []
    logging.info(f"–ó–∞–≥—Ä—É–∑–∫–∞ {len(media_list)} –º–µ–¥–∏–∞ –¥–ª—è –±—É–∫–µ—Ç–∞ {bouquet_id}")

    for index, file_id in enumerate(media_list, start=1):
        try:
            url = await upload_photo_to_storage(bot, file_id, bouquet_id, index - 1)
            if url:
                uploaded.append({"file_id": file_id, "url": url})
                logging.info(f"[{index}] –∑–∞–≥—Ä—É–∂–µ–Ω–æ -> {url}")
            else:
                uploaded.append({"file_id": file_id})
                logging.warning(f"[{index}] –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞ –æ–±–ª–∞–∫–æ, —Å–æ—Ö—Ä–∞–Ω—è—é —Ç–æ–ª—å–∫–æ file_id")
        except Exception as e:
            logging.error(f"[{index}] –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ: {e}", exc_info=True)
            uploaded.append({"file_id": file_id})

    logging.info(f"–ò—Ç–æ–≥ –º–µ–¥–∏–∞ –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é: {uploaded}")
    return uploaded


async def handle_back_to_menu(callback: types.CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π."""
    try:
        keyboard = types.ReplyKeyboardMarkup(
            keyboard=[
                [types.KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –±—É–∫–µ—Ç")],
                [types.KeyboardButton(text="üìö –ú–æ–∏ –±—É–∫–µ—Ç—ã")],
                [types.KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")],
                [types.KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å")],
            ],
            resize_keyboard=True
        )
        await callback.message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=keyboard)
        await callback.answer()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ handle_back_to_menu: {e}", exc_info=True)
        try:
            await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é.")
        except Exception:
            pass


# –§–∞–π–ª –Ω–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
if __name__ == "__main__":
    print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –±–æ—Ç–∞.")
